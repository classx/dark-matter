name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release (e.g., v1.0.0)"
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os-name: Linux-x86_64-gnu
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os-name: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
          - os-name: macOS-ARM64
            os: macos-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install musl-tools (Linux musl only)
        if: matrix.platform.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build binary
        run: |
          cargo build --release --target ${{ matrix.platform.target }}

      - name: Package binary
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czf ../../../dark-matter-${{ matrix.platform.os-name }}.tar.gz dark-matter
          cd -

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dark-matter-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  fedora-release:
    name: Release - Fedora-Core-42-x86_64
    runs-on: ubuntu-latest
    container:
      image: fedora:42
      options: --user root
    steps:
      - name: Install git and dependencies
        run: |
          dnf update -y
          dnf install -y git gcc gcc-c++ make curl

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source ~/.cargo/env
          rustup target add x86_64-unknown-linux-gnu

      - name: Build binary
        run: |
          source ~/.cargo/env
          cargo build --release --target x86_64-unknown-linux-gnu

      - name: Package binary
        run: |
          cd target/x86_64-unknown-linux-gnu/release
          tar czf ../../../dark-matter-Fedora-Core-42-x86_64.tar.gz dark-matter
          cd -

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dark-matter-Fedora-Core-42-x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
